using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Windows.Forms;
using SmartMealPlanner.Core.Models;
using SmartMealPlanner.Core.Services;

namespace SmartMealPlanner.UI;

public class IngredientManagementForm : Form
{
    private IPantryService _pantryService;
    private Pantry _pantry;
    private BindingList<Ingredient> _ingredientsBindingList;

    public IngredientManagementForm(IPantryService pantryService)
    {
        InitializeComponent();
        _pantryService = pantryService;
    }

    private void IngredientManagementForm_Load(object sender, EventArgs e)
    {
        LoadPantry();
    }

    private void LoadPantry()
    {
        _pantry = _pantryService.GetPantryAsync().GetResult();
        _ingredientsBindingList = new BindingList<Ingredient>(
            _pantry.Items
                .Select(kvp => new Ingredient { Name = kvp.Key, Quantity = kvp.Value })
                .ToList()
        );
        dataGridViewIngredients.DataSource = _ingredientsBindingList;

        dataGridViewIngredients.Columns["Name"].ReadOnly = true;
        dataGridViewIngredients.Columns["Quantity"].ReadOnly = false;

        private void buttonSave_Click(object sender, EventArgs e)
    {
        SaveChanges();
    }

    private void SaveChanges()
    {
        _pantry.Items.Clear();
        foreach (var ingredient in _ingredientsBindingList)
        {
            if (!string.IsNullOrWhiteSpace(ingredient.Name))
            {
                _pantry.Items[ingredient.Name] = ingredient.Quantity;
            }
        }

        _pantryService.SavePantryAsync(_pantry).GetAwaiter().GetResult();
        MessageBox.Show("Pantry saved successfully.");
    }

    private void buttonAdd_Click(object sender, EventArgs e)
    {
        _ingredientsBindingList.Add(new Ingredient { Name = "New Ingredient", Quantity = 0 });
    }

    private void buttonDelete_Click(object sender, EventArgs e)
    {
        if (dataGridViewIngredients.CurrentRow != null)
        {
            var ingredient = dataGridViewIngredients.CurrentRow.DataBoundItem as Ingredient;
            if (ingredient != null)
            {
                _ingredientsBindingList.Remove(ingredient);
            }
        }
    }

}

public class IngredientRow
{
    public string Name { get; set; }
    public double Quantity { get; set; }
}